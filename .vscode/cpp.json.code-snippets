
{
	"Base code":{
		"prefix":"bc",
		"body":[

	
		"#include<iostream>",
		"using namespace std;",
		"",
		"int main()",
		"{",
		   "\t$0",

		"\n\n\n\treturn 0;"	,
		"}",

		],
		"description": "Base code"
	},

	"Base all":{
		"prefix":"ba",
		"body":[

	
		"#include<bits/stdc++.h>",
		"using namespace std;",
		"",
		"int main()",
		"{",
           "\t$0",

		"\n\n\n\treturn 0;"	,
		"}",

		],
		"description": "Base code"
	},


	"Base code io":{
		"prefix":"bio",
		"body":[

	
		"#include<bits/stdc++.h>",
		"",
		"using namespace std;",
		"",
		"int main()",
		"{",
			"\tfreopen(\"input.txt\",\"r\",stdin);",
			"\tfreopen(\"output.txt\",\"w\",stdout);",
           "\t$0",

		"\n\n\n\treturn 0;"	,
		"}",

		],
		"description": "Base io"
	},

	"Base code cp":{
		"prefix":"cp",
		"body":[

	
		
					"#include <bits/stdc++.h>",
					"",
					// "#define all(a) (a).begin(), (a).end()",
					// "#define sz(a) (int)(a).size()",
					// "#define pb push_back",
					// "#define mp make_pair",
					"",
					"using namespace std;",

					// "typedef long long ll;",
					// "typedef long double ld;",
					// "typedef pair<int, int> pii;",
					"",
					"$1",
					"",
					"int main() {",
					"\tint t;",
					"\tcin >> t;",
					"\twhile(t-- > 0){",
					"\t\t$0",
					"",
					"",
					"\t}",
					"",
					"\treturn 0;",
					"}",



		],
		"description": "cp"
	}
	
	

	// Place your c++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}